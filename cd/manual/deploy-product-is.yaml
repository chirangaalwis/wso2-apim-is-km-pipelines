# -------------------------------------------------------------------------------------
# Azure DevOps Pipeline for deploying a WSO2 API Manager Product Helm Chart
# --------------------------------------------------------------------------------------

trigger:
  - none

variables:
  - template: ./common-variables.yaml

pool:
  vmImage: 'ubuntu-latest'

jobs:
  - template: ./deploy-product-chart.yaml
    parameters:
      AZURE_RM_SERVICE_CONNECTION_FOR_KUBERNETES: $(AZURE_RM_SERVICE_CONNECTION_FOR_KUBERNETES)
      AKS_CLUSTER_NAME: $(AKS_CLUSTER_NAME)
      AKS_RESOURCE_GROUP: $(AKS_RESOURCE_GROUP)
      KUBERNETES_NAMESPACE_FOR_PRODUCT_WORKLOADS: $(KUBERNETES_NAMESPACE_FOR_PRODUCT_DEPLOYMENT)
      HELM_CHART_ROOT: 'deployment/is-pattern-1'
      HELM_RELEASE_NAME: 'identity'
      AZURE_KEY_VAULT_SERVICE_CONNECTION: $(AZURE_KEY_VAULT_SERVICE_CONNECTION)
      DEPLOYMENT_AZURE_KEY_VAULT_NAME: $(DEPLOYMENT_AZURE_KEY_VAULT_NAME)
      HELM_INPUT_VALUES: 'wso2.deployment.wso2is.dockerRegistry="wso2srernd.azurecr.io",wso2.deployment.wso2is.imageName=wso2is-km-neo,wso2.deployment.wso2is.imageTag=5.11.0.88-jdk11,wso2.deployment.wso2is.customConfig.cryptography.keyStores.primary.password=$(IS-PRIMARY-KEYSTORE-PASSWORD),wso2.deployment.wso2is.customConfig.cryptography.keyStores.secondary.password=$(IS-SECONDARY-KEYSTORE-PASSWORD),wso2.deployment.wso2is.customConfig.cryptography.keyStores.internal.password=$(IS-INTERNAL-KEYSTORE-PASSWORD),wso2.deployment.wso2is.customConfig.cryptography.trustStorePassword=$(IS-CERT-TRUST-STORE-PASSWORD)'
